{"version":3,"sources":["components/navbar/NavBar.js","components/table/ContentTable.js","helpers/loadData.js","pages/Description.js","pages/Programming.js","routes/routes.js","index.js"],"names":["NavBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","exact","to","activeClassName","ContentTable","weeks","scope","map","element","index","key","loadData","from","data","slice","Description","target","src","process","alt","Programming","useState","setWeeks","handleClick","start","end","active","onClick","Routes","basename","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f88761b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <span className=\"navbar-brand\">&nbsp;&nbsp;UNIR</span>\r\n            <button \r\n                className=\"navbar-toggler\" \r\n                type=\"button\" data-toggle=\"collapse\" \r\n                data-target=\"#navbarSupportedContent\" \r\n                aria-controls=\"navbarSupportedContent\" \r\n                aria-expanded=\"false\" \r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div \r\n                className=\"collapse navbar-collapse\" \r\n                id=\"navbarSupportedContent\"\r\n            >\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\">\r\n                            Aulas\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\">\r\n                            Agenda\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\">\r\n                            Exámenes\r\n                        </a>\r\n                    </li>                    \r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\">\r\n                            Secretaría\r\n                        </a>\r\n                    </li>\r\n                    <span className=\"nav-item\">\r\n                        <NavLink exact to=\"/\" activeClassName=\"nav-link active\" className=\"nav-link\">\r\n                            Programación\r\n                        </NavLink>\r\n                    </span>\r\n                    <span className=\"nav-item\">\r\n                        <NavLink to=\"/description\" activeClassName=\"nav-link active\"  className=\"nav-link\">\r\n                            ¿Cómo se hizo?\r\n                        </NavLink>\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContentTable = ({weeks}) => {\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">Semanas</th>\r\n                <th scope=\"col\">Temas</th>\r\n                <th scope=\"col\">Actividades</th>\r\n                <th scope=\"col\">Eventos</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                {\r\n                    weeks.map((element, index)=>(\r\n                        <tr key={index+\"-tr\"}>\r\n                            <th scope=\"row\" key={index+\"-th-0\"}>\r\n                                {<small>{element[\"semana\"][\"fecha\"]}</small>}\r\n                            </th>\r\n                            <td scope=\"row\" key={index+\"-td-0\"}>\r\n                                <h5>{element[\"tema\"][\"nombre\"]}</h5>\r\n                                <span>\r\n                                    {\r\n                                        (element[\"tema\"][\"subtemas\"] || []).map((element, key)=>(\r\n                                            <span key={key}>\r\n                                                {element}\r\n                                                <br/>\r\n                                            </span>\r\n                                        ))\r\n                                    }    \r\n                                </span>               \r\n                            </td>\r\n                            <td scope=\"row\" key={index+\"-td-0\"}>\r\n                                {\r\n                                    (element[\"actividades\"] || []).map((element, key)=>(\r\n                                        <span key={key}>\r\n                                            {element}\r\n                                            <br/>\r\n                                        </span>\r\n                                    ))\r\n                                }\r\n                            </td>\r\n                            <td scope=\"row\" key={index+\"-td-0\"}>\r\n                                {\r\n                                    (element[\"eventos\"] || []).map((element, key)=>(\r\n                                        <span key={key+\"-span\"}>\r\n                                            {element}\r\n                                            <br/>\r\n                                        </span>\r\n                                    ))\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\n\r\nContentTable.propTypes = {\r\n    weeks: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default ContentTable\r\n","import data from '../data/data.json';\r\n\r\nconst loadData = (from, to)=>data[\"data\"].slice(from-1, to);\r\n\r\nexport {loadData}","import React from 'react';\r\nimport { NavBar } from '../components/navbar/NavBar';\r\nimport ContentTable from '../components/table/ContentTable';\r\nimport { loadData } from '../helpers/loadData';\r\nimport './description.css';\r\n\r\nexport const Description = () => {\r\n    return (\r\n        <div className=\"container description\">\r\n            <br/>\r\n            <h2>Explicación de la actividad</h2>\r\n            <hr/>\r\n            <span>\r\n                Para la realización de esta actividad se replicó el apartado de <i>Programación</i> de la plataforma \r\n                de la UNIR mediante el uso de la librería de <a href=\"https://reactjs.org/\" target=\"_blank\">React.js</a>, \r\n                la cual es desarrollada y mantenida por Facebook y su principal enfoque es la programación orientada a \r\n                componentes y el <i>atomic design</i>; con esta librería se creó una app de una sola página (SPA) \r\n                con ayuda del módulo de&nbsp;<a href=\"https://reactrouter.com/\" target=\"_blank\">react-router-dom</a>.\r\n                <br/><br/>Bootstrap fue utilizado como framework CSS y de él se obtuvieron los componentes de la barra de \r\n                navegación así como la barra de estado de la semana en la que se está.<br/>\r\n                <img \r\n                    src={process.env.PUBLIC_URL+\"/barrasuperior.jpg\" }\r\n                    alt=\"barra superior\"\r\n                />\r\n                En este caso, tanto la barra superior como la de la semana en la que se está observando la planificación \r\n                son componentes creados por bootstrap, por lo que solo se tuvieron que adaptar al proyecto; estos \r\n                componentes son muy útiles cuando se combinan con los componentes que ofrece <i>react-router-dom</i> \r\n                &nbsp;debido a que se puede ahorrar cierta lógica, como la de saber qué botón resaltar en función al \r\n                componente renderizado, ya que aquí se puede usar el componente <i>NavLink</i> y definir la clase \r\n                CSS del diseño del botón activado y el componente se encargará de validar si debe resaltarse o no.\r\n            </span>\r\n            <h3><br/>Estructura del proyecto</h3>\r\n            <br/>\r\n            <div className=\"row\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL+\"/estructura.jpg\"}\r\n                    alt=\"estructura del proyecto\"\r\n                    className=\"col-md-4\"\r\n                />\r\n                <span className=\"col-md-8\">\r\n                    El proyecto consta con una estructura como se ve en la imagen, donde en la carpeta&nbsp;\r\n                    <b>public</b> se encuentra el código HTML de la web, así como los <i>assets</i> que se \r\n                    utilizaron (las capturas de esta página). En la carpeta <b>src</b> se encuentra toda la \r\n                    lógica del sitio web, al igual que cada una de las interfaces que conforman la SPA; todo esto \r\n                    fue desarrollado usando JSX que es una extensión de sintaxis de JavaScript para incrustar \r\n                    código HTML y agilizar el proceso de desarrollo, todo esto cuando se compile \r\n                    el proyecto será transformado a código JavaScript y HTML respectivamente mediante el uso de \r\n                    la librería Babel.<br/><br/>\r\n                    Los datos utilizados se encuentran ubicados en la carpeta <b>data</b> en formato JSON y son \r\n                    obtenidos de la plataforma de la UNIR. la estructura de cada elemento del JSON se muestra \r\n                    a continuación. Las llaves de <i>subtemas, eventos</i> y <i>actividades</i> son opcionales,\r\n                    <br/>\r\n                    <img \r\n                        src={process.env.PUBLIC_URL+\"/data.jpg\"}\r\n                        alt=\"data\"\r\n                    />\r\n                    El acceso a estos datos se da mediante un método definido en la carpeta <b>helpers</b>, al \r\n                    que se le pasará como parámetros la semana de inicio y la semana de finalización. <br/>\r\n                    El proyecto se encuentra disponible en GitHub:&nbsp;\r\n                    <a \r\n                        href=\"https://github.com/JoelGarcia99/UNIR-replica-programacion\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Deber UNIR\r\n                    </a>\r\n                </span>\r\n            </div>\r\n            Esta estructura utiliza una arquitectura similar al modelo vista controlador, en donde los controladores \r\n            vendrían a ser los hooks que ya provee react, las vistas y los modelos estarían unidos de cierta forma \r\n            debido a la naturaleza de JSX, aunque si se revisa el código, se ve que cada componente tiene un modelo \r\n            con un determinado estado, y esto está separado de la vista, que es el código HTML que se va a renderizar.\r\n            <br/><br/>\r\n            <h3>Los componentes</h3><br/>\r\n            <span>\r\n                Como se mencionó anteriormente, se utilizaron componentes de <i>bootstrap</i> y de <i>react \r\n                router dom</i> para la realización de esta web. Uno de los componentes es el de la barra de \r\n                navegación principal, el cual se obtuvo de bootstrap y únicamente se le cambió el nombre de \r\n                las opciones.\r\n                <br/><br/>\r\n                <NavBar />\r\n                <br/>\r\n                Esta barra fue obtenida directamente de la página oficial de Bootstrap, y se combinó con el \r\n                componente <i>NavLink</i> de <i>react router DOM</i>, dando como resultado una barra que \r\n                valida el componente que se está renderizando y en función a ello resalta la opción activa \r\n                de forma automática, sin necesidad de código extra. A continuación se muestra el uso del \r\n                componente <i>NavLink</i>, y como se puede apreciar, solo recibe dos parámetros sin \r\n                contar la clase CSS que está disponible en todas las etiquetas HTML; el primer parámetro \r\n                es <b>to</b>, y será la ruta hacia la que se desea llegar, que en este caso, lo único que \r\n                hará será cambiar el componente JSX a renderizar; el segundo parámetro es el de la clase \r\n                CSS, el <b>activeClassName</b>, que se asigna en caso de que este sea el elemento activo, \r\n                y ya con esto se valida en qué ruta se \r\n                está y el componente se encarga de resaltarse o no de acuerdo a la ruta que el usuario \r\n                escoja. <br/>\r\n                <pre className=\"prettyprint\">\r\n                    <code>\r\n                        &lt;NavLink to=\"/description\" activeClassName=\"nav-link active\" className=\"nav-link\"&gt;\r\n                        <br/>\r\n                        &ensp;¿Cómo se hizo?\r\n                        <br/>\r\n                        &lt;/NavLink&gt;\r\n                    </code>\r\n                </pre>\r\n                Otro componente es el del navbar de las semanas, el cual funciona de una forma bastante similar \r\n                al navbar anterior. Para saber en qué semana se está, hay que usar el hook <i>useState</i> de \r\n                react, el cual permite controlar el estado de la aplicación y redibujar los componentes en \r\n                función de los datos que han cambiado. Cada vez que se hace click en algún botón se dispara \r\n                la función <i>handleClick</i>, la cual es encargada de actualizar el estado de la aplicación \r\n                y redibujar los componentes en función de los nuevos datos.<br/>\r\n                <pre className=\"prettyprint\">\r\n                    <code>\r\n                        const [weeks, setWeeks] = useState({\"{\"}\r\n                            <br/>&ensp;\"start\": 1,\r\n                            <br/>&ensp;\"end\": 6,\r\n                            <br/>&ensp;\"active\": 0<br/>\r\n                        {\"}\"});\r\n                        <br/><br/>\r\n                        {\"const handleClick = (start, end, index)=>{\\n\"}\r\n                        &ensp;setWeeks{\"({ ...weeks, start, end, active: index})\"}\r\n                        {\"\\n}\"}\r\n                    </code>\r\n                </pre>\r\n                <br/>\r\n                Otro de los componentes utilizados fue el de las tablas, el cuál se encuentra en la carpeta \r\n                &nbsp;<b>components</b> y cuyo diseño se obtuvo mediante un componente CSS obtenido desde bootstrap. \r\n                Este componente se renderiza en función del estado de la barra de navegación semanal, y \r\n                recibe como parámetro únicamente un vector de objetos. Los enlaces que estaban en la plataforma \r\n                de la UNIR (como los de los test) no se pusieron porque estos validan que el usuario esté \r\n                autenticado, por lo que no servirían en este caso.<br/><br/>\r\n                <ContentTable weeks={loadData(1, 1)}/>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport ContentTable from '../components/table/ContentTable';\r\nimport { loadData } from '../helpers/loadData';\r\nimport './programming.css';\r\n\r\nexport const Programming = () => {\r\n    \r\n    const [weeks, setWeeks] = useState({\r\n        \"start\": 1,\r\n        \"end\": 6,\r\n        \"active\": 0\r\n    });\r\n\r\n    const handleClick = (start, end, index)=>{\r\n        setWeeks({...weeks, start, end, active: index})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"header\">\r\n            <h3>Vista de la programación semanal</h3>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">                        \r\n                    <button \r\n                        className={\"btn btn-outline-success my-2 my-sm-0 \"+(weeks[\"active\"]===0? \"active\":\"\")}\r\n                        type=\"submit\"\r\n                        onClick={()=>handleClick(1, 6, 0)}\r\n                    >\r\n                        Semana 1 a 6\r\n                    </button>\r\n                    <button \r\n                        className={\"btn btn-outline-success my-2 my-sm-0 \"+(weeks[\"active\"]===1? \"active\":\"\")}\r\n                        type=\"submit\"\r\n                        onClick={()=>handleClick(7, 12, 1)}\r\n                    >\r\n                        Semana 7 a 12\r\n                    </button>\r\n                    <button \r\n                        className={\"btn btn-outline-success my-2 my-sm-0 \"+(weeks[\"active\"]===2? \"active\":\"\")}\r\n                        type=\"submit\"\r\n                        onClick={()=>handleClick(13, 16, 2)}\r\n                    >\r\n                        Semana 13 a 16\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <hr />\r\n            <div className=\"container\">\r\n                <small>\r\n                    Para conocer la fecha de entrega de las distintas actividades accede a \r\n                    la sección Actividades (en el menú lateral). Recuerda que la suma de las \r\n                    puntuaciones de todas las actividades es de 15 puntos. Puedes hacer las \r\n                    que prefieras hasta conseguir un máximo de 10 puntos (que es la calificación \r\n                    máxima que se puede obtener en la evaluación continua).\r\n                </small>\r\n            </div>\r\n            <br/>\r\n            <ContentTable weeks={loadData(weeks[\"start\"], weeks[\"end\"])}/>\r\n            <br/>\r\n            <span><b>Nota</b>: Los siguientes días se consideran periodos no lectivos:</span>\r\n            <br/>\r\n            <ul>\r\n                <li>Del 21 de diciembre al 27 de diciembre.</li>\r\n                <li>Del 28 de diciembre al 03 de enero.</li>\r\n                <li>Del 29 de marzo al 04 de abril.</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { NavBar } from '../components/navbar/NavBar';\r\nimport { Description } from '../pages/Description';\r\nimport { Programming } from '../pages/Programming';\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path=\"/description\" component={Description} />\r\n                <Route exact path=\"/\" component={Programming} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Routes } from './routes/routes';\r\n\r\nReactDOM.render(\r\n  <Routes />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}